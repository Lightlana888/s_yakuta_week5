1. В большинстве случаев следует использовать flex, потому что именно данный метод является наиболее гибким, что позволяет управлять элементами на странице более эффективно. Элементы подстраиваются под размеры блока, в котором размещены, если не задано иное, с помощью набора правил можно задать им напрвление и место в блоке.
display:table лучше всего подходит для размещения данных в виде таблицы. Контейнеру задается диспле-тейбл, затем можно задать строкам таблицы класс item и установить для этого класса display:table-row, а для ячеек использовать div с display:table-cell.
Во флексе для размещения элементов используется две оси, главная (по умолчанию идет слева направо) и поперечная (по умолчанию идет сверху вниз). Направление элементов по умолчанию стоит по главной оси горизонтально, но с помощью правила flex-direction можно задать направление в ряд (row) либо в колонку (column),либо в обратном направлении (row-reverse, column-reverse).
3. Margin auto используется для центрирования элемента внутри блока по горизонтали, то есть при данном свойстве браузер автоматически применяет равные отступы слева и справа для центрирования элемента внутри родительского контейнера. 
4. box-sizing обладает рядом преимуществ. Вл-первых, использование данного свойства позволяет управлять расположением элементов более просто. Например, если использовать значение border-box, то граница и внутренний отступ будут включены в размеры элемента, что делает расчеты более предсказуемыми, то есть не нужно учитывать их отдельно при размещении элементов. Во-вторых,удобство при позиционировании элементов с фиксированной шириной и высотой, так как можно их легко выравнивать по горизонтали и вертикали. В-третьих, совместитмость с другими методами макетов, такими как например flexbox.
5. Отличие в том, что это два противоположных свойства.Flex-grow это свойство задает элементу способность увеличивать свою ширину внутри контейнера при наличии свободного пространства. А flex-shrink задает элементу способность уменьшать свою начальную ширину если пространства внутри контейнера не хватает для всех элементов в линии.
7. display:flex; flex-direction:row; justify-content:space-between.
8. Ширина элемента 141,5, высота - 15,8.
9. Свойство order нужно для изменения порядка отображения элементов, ьез изменения их порядка в коде. Таким образом, можно задать данное свойство элементу для отображения его раньше или позже, чем он прописан в коде. Можно использоватьь это свойство для отображения блоков в зависимости от размера экрана, например при просмотре с мобильного устройства, чтобы отображался в первую очередь важный контент. 
10.  <table border="1px" style="width: 20%;">
        <tr>
            <td>Column1</td>
            <td>Column2</td>
            <td>Column3</td>
        </tr>
        <tr>
            <td rowspan="2">Row 1 Cell 1</td>
            <td>Row 1 Cell 2</td>
            <td>Row 2 Cell 2</td>
        </tr>
        <tr>

            <td>Row 1 Cell 3</td>
            <td>Row 2 Cell 3</td>
        </tr>
        <tr>
            <td colspan="3">Row 3 Cell 1</td>
        </tr>
    </table>
    11. Размер контейнера расчивается следующим образом, если у элемента фиксированная ширина и высота, то его считаем его собственный размеры+размер паддингов+размеры границы. Если внутри контейнера несколько элементов, то размеры всех элементов+размеры паддингов+плюс размеры границы.
12.git 